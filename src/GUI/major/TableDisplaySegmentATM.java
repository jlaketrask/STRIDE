package GUI.major;

import GUI.major.tableHelper.SegATMTable;
import GUI.major.tableHelper.SplitTableJPanel;
import coreEngine.Seed;
import java.awt.Font;
import javax.swing.BoundedRangeModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

/**
 * This is the major table display for segment inputs and outputs.
 *
 * @author Shu Liu
 */
public class TableDisplaySegmentATM extends javax.swing.JPanel {

    private MainWindow mainWindow;
    private SegATMTable segATMTable;
    private final SplitTableJPanel segIOSplitTable;

    /**
     * Creates new form TableDisplay
     */
    public TableDisplaySegmentATM() {
        initComponents();
        //segIOTable = new SegIOTableWithSetting();
        segATMTable = new SegATMTable();
        segIOSplitTable = new SplitTableJPanel(segATMTable.getFirstColumnTable(), segATMTable.getRestColumnTable());
        segIOSplitTable.setDividerLocation(270);
        add(segIOSplitTable);

        //set up for set highlight
        ListSelectionListener listener = new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                int col = segATMTable.getRestColumnTable().getSelectedColumn();
                if (col >= 0) {
                    mainWindow.segmentSelectedByTable(col);
                }
            }
        };

        //segIOTable.getRestColumnTable().getSelectionModel().addListSelectionListener(listener);
        segATMTable.getRestColumnTable().getColumnModel().getSelectionModel().addListSelectionListener(listener);
    }

    /**
     * Show data for a particular seed, scenario and period
     *
     * @param seed seed to be displayed
     * @param period index of period to be displayed
     */
    public void selectSeedScenATDMPeriod(Seed seed, int period) {
        segATMTable.selectSeedScenPeriod(seed, period);
    }

    /**
     * Update table
     */
    public void update() {
        segATMTable.update();
    }

    /**
     * Highlight a particular segment
     *
     * @param seg segment index (start with 0) to be highlighted
     */
    public void setHighlight(int seg) {
        //set which segment to be highlighted
        if (seg >= 0) {
            segATMTable.getRestColumnTable().setColumnSelectionInterval(seg, seg);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setLayout(new java.awt.GridLayout(1, 0));
    }// </editor-fold>//GEN-END:initComponents

    // <editor-fold defaultstate="collapsed" desc="setter and getters">
    /**
     * Setter for mainWindow connection
     *
     * @param mainWindow main window instance
     */
    public void setMainWindow(MainWindow mainWindow) {
        this.mainWindow = mainWindow;
        segATMTable.setMainWindow(mainWindow);
    }

    /**
    /**
     * Getter for segIOTable
     *
     * @return segIOTable instance
     */
    public SegATMTable getSegIOTable() {
        return segATMTable;
    }

    /**
     * Setter for table font
     *
     * @param newTableFont new table font
     */
    public void setTableFont(Font newTableFont) {
        //segATMTable.setTableFont(newTableFont);
        segATMTable.getFirstColumnTable().setFont(newTableFont);
        segATMTable.getFirstColumnTable().setRowHeight(newTableFont.getSize() + 2);
        segATMTable.getRestColumnTable().setFont(newTableFont);
        segATMTable.getRestColumnTable().setRowHeight(newTableFont.getSize() + 2);
    }

    public BoundedRangeModel getScrollModel() {
        return segIOSplitTable.getScrollModel();
    }
    
    public void selectSeedScenPeriod(Seed seed, int period) {
        segATMTable.selectSeedScenPeriod(seed, period);
    }

    // </editor-fold>
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

}
